<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- =================== PALETTE =================== -->
    <SolidColorBrush x:Key="Brush.Background"  Color="#0F172A"/>
    <SolidColorBrush x:Key="Brush.Panel"       Color="#1E293B"/>
    <SolidColorBrush x:Key="Brush.Border"      Color="#334155"/>
    <SolidColorBrush x:Key="Brush.Text"        Color="#E2E8F0"/>
    <SolidColorBrush x:Key="Brush.TextMuted"   Color="#94A3B8"/>
    <SolidColorBrush x:Key="Brush.Accent"      Color="#2563EB"/>
    <SolidColorBrush x:Key="Brush.AccentHover" Color="#1D4ED8"/>
    <SolidColorBrush x:Key="Brush.Danger"      Color="#DC2626"/>
    <SolidColorBrush x:Key="Brush.Fg.Primary"  Color="#FF1F2937"/>

    <!-- Money tints -->
    <SolidColorBrush x:Key="Amount.Positive.Bg" Color="#14532D"/>
    <SolidColorBrush x:Key="Amount.Positive.Fg" Color="#ECFDF5"/>
    <SolidColorBrush x:Key="Amount.Negative.Bg" Color="#7F1D1D"/>
    <SolidColorBrush x:Key="Amount.Negative.Fg" Color="#FEE2E2"/>
    <SolidColorBrush x:Key="Amount.Neutral.Bg"  Color="#374151"/>
    <SolidColorBrush x:Key="Amount.Neutral.Fg"  Color="#E5E7EB"/>

    <!-- =================== TYPOGRAPHY (POS scale) =================== -->
    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize"   Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    </Style>

    <Style x:Key="H1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    </Style>

    <Style x:Key="H2" TargetType="TextBlock">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    </Style>

    <Style x:Key="LabelMuted" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Brush.TextMuted}"/>
    </Style>

    <!-- =================== BUTTONS =================== -->
    <Style x:Key="ButtonBase" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize"   Value="16"/>
        <Setter Property="Height"     Value="44"/>
        <Setter Property="Padding"    Value="14,6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"   Value="{StaticResource Brush.AccentHover}"/>
                <Setter Property="BorderBrush"  Value="{StaticResource Brush.AccentHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"  Value="#1E40AF"/>
                <Setter Property="BorderBrush" Value="#1E40AF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.55"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonPrimary" TargetType="Button" BasedOn="{StaticResource ButtonBase}"/>
    <Style x:Key="ButtonDanger"  TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background"   Value="{StaticResource Brush.Danger}"/>
        <Setter Property="BorderBrush"  Value="{StaticResource Brush.Danger}"/>
    </Style>

    <!-- Ikon-knap: -->
    <Style x:Key="ButtonIcon" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!-- Inheritance -->
        <Setter Property="Foreground" Value="{DynamicResource Brush.Fg.Primary}"/>
    </Style>

    <!-- =================== INPUTS =================== -->
    <Style x:Key="TextBoxBase" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness"       Value="1"/>
        <Setter Property="Height"                Value="42"/>
        <Setter Property="Padding"               Value="8,4"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ComboBoxBase" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!-- Form alignment helpers -->
    <Style x:Key="TitleLeft" TargetType="TextBlock" BasedOn="{StaticResource LabelMuted}">
        <Setter Property="TextAlignment"       Value="Right"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="Foreground"          Value="#CFE0FF"/>
        <Setter Property="FontSize"            Value="30"/>
        <Setter Property="Margin"              Value="0,0,12,0"/>
    </Style>
    <Style x:Key="InputRight" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize"            Value="30"/>
        <Setter Property="Margin"              Value="0,0,0,0"/>
    </Style>
    <Style x:Key="ComboRight" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBase}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="TextBlockRight" TargetType="TextBlock" BasedOn="{StaticResource TitleLeft}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Margin"              Value="0,0,0,0"/>
    </Style>

    <!-- =================== CARDS / SECTIONS =================== -->
    <!-- GroupBox that looks like a Card and auto-uses H2 header -->
    <Style x:Key="CardSection" TargetType="GroupBox">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Style="{StaticResource H2}" Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Background="{StaticResource Brush.Panel}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="1"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <DockPanel Margin="12">
                            <ContentPresenter DockPanel.Dock="Top"
                                              ContentSource="Header"
                                              Margin="0,0,0,8"/>
                            <ContentPresenter/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Borders -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- =================== DATAGRID =================== -->
    <Style x:Key="DataGridBase" TargetType="DataGrid">
        <!-- Resources skal stå først i en Style -->
        <Style.Resources>
            <!-- Center alle TextBlocks inde i DataGrid-celler som default -->
            <Style TargetType="TextBlock">
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
        </Style.Resources>

        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows"    Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="RowHeight" Value="44"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="ColumnHeaderHeight" Value="42"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="AlternatingRowBackground" Value="#1C2431"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

        <!-- centrér alle kolonneoverskrifter globalt -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>

        <!-- markér hele rækken -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#056097"/>
                            <Setter Property="BorderBrush" Value="#056097"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <!-- centrér alt celle-indhold -->
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment"   Value="Center"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background"  Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Background"  Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Smarte DataGrid headers: mørk baggrund, semibold, afrundede kanter -->
    <Style x:Key="DataGridHeader.Smart" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#223044"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="12"
                        SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Ensartet kompakt tabel til Renters + Sale Row 2 -->
    <Style x:Key="DataGrid.Table" TargetType="DataGrid" BasedOn="{StaticResource DataGridBase}">
        <!-- Kun kompakthed – alt andet arves fra DataGridBase -->
        <Setter Property="RowHeight" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ColumnHeaderHeight" Value="36"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridHeader.Smart}"/>
        <!-- Valgfrit: scroll hvis listen bliver lang -->
        <Setter Property="MaxHeight" Value="520"/>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>

    <!-- Kun tekstfarve på beløb: grøn/rød som i EconomyView -->
    <Style x:Key="MoneyTextColor" TargetType="TextBlock" BasedOn="{StaticResource TextBlockRight}">
        <!-- Default (neutral) -->
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Style.Triggers>
            <!-- Samme farver som dit EconomyView-eksempel -->
            <DataTrigger Binding="{Binding IsPositive}" Value="True">
                <Setter Property="Foreground" Value="#3DDC84"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsNegative}" Value="True">
                <Setter Property="Foreground" Value="#FF6B6B"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Cell pill template (rounded full-cell background) -->
    <Style x:Key="DataGridCellPill" TargetType="DataGridCell">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Pill"
                            Background="{TemplateBinding Background}"
                            CornerRadius="16"
                            Margin="2">
                        <ContentPresenter Margin="10,4"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Money cell: colors by IsPositive (VM gives bool) -->
    <Style x:Key="DataGridCellMoney" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellPill}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPositive}" Value="True">
                <Setter Property="Background" Value="{StaticResource Amount.Positive.Bg}"/>
                <Setter Property="Foreground" Value="{StaticResource Amount.Positive.Fg}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPositive}" Value="False">
                <Setter Property="Background" Value="{StaticResource Amount.Negative.Bg}"/>
                <Setter Property="Foreground" Value="{StaticResource Amount.Negative.Fg}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- =================== CHIPS (for detail panels) =================== -->
    <Style x:Key="ChipText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Amount.Neutral.Fg}"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ChipPositive" TargetType="Border">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource Amount.Positive.Bg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Amount.Positive.Bg}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="ChipNegative" TargetType="Border">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource Amount.Negative.Bg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Amount.Negative.Bg}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- =================== REUSABLE CELL TEMPLATES =================== -->
    <DataTemplate x:Key="CellTemplate.MoneyDifference">
        <TextBlock Text="{Binding Difference, StringFormat={}{0:N2} kr.}" FontWeight="SemiBold"/>
    </DataTemplate>

    <!-- ============ NAVIGATION (ListBox-baseret) ============ -->

    <!-- Hvad der står på “knappen” -->
    <DataTemplate x:Key="NavItemTemplate">
        <TextBlock Text="{Binding Title}"
                   Foreground="White"
                   FontSize="20"
                   FontWeight="SemiBold"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
    </DataTemplate>

    <!-- Hver post opfører sig som en rund “knap” -->
    <Style x:Key="NavListBoxItem" TargetType="ListBoxItem">
        <!-- flise-størrelse/margins som dine knapper -->
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Card"
                            CornerRadius="15"
                            Background="{StaticResource Brush.Accent}"
                            BorderBrush="{StaticResource Brush.Accent}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover som dine knapper -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Card" Property="Background"  Value="{StaticResource Brush.AccentHover}"/>
                            <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Brush.AccentHover}"/>
                        </Trigger>
                        <!-- Valgt = grøn -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Card" Property="Background"  Value="{StaticResource Amount.Positive.Bg}"/>
                            <Setter TargetName="Card" Property="BorderBrush" Value="{StaticResource Amount.Positive.Bg}"/>
                        </Trigger>
                        <!-- Disabled-look -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Card" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Selve ListBox’en (rammeløs, ingen scrollbar i venstre rail) -->
    <Style x:Key="NavListBox" TargetType="ListBox">
        <Setter Property="ItemTemplate" Value="{StaticResource NavItemTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource NavListBoxItem}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <!-- Viser grid når IsEditing = false -->
    <Style x:Key="ShowGridWhenNotEditing" BasedOn="{StaticResource Card}" TargetType="Border">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Viser grid når IsEditing = true -->
    <Style x:Key="ShowGridWhenEditing" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- =================== RADIO BUTTON =================== -->
    <Style x:Key="HighlightRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="DarkGray" BorderThickness="1" CornerRadius="4"
                            Padding="8" Margin="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
